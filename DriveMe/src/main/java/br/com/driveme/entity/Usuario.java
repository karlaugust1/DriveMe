package br.com.driveme.entity;
// Generated 09/09/2018 21:13:34 by Hibernate Tools 5.2.11.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Proxy;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", catalog = "drivemedev_v1")
@JsonIgnoreProperties(value = {"pecaAvaliacaos", "wishlists"})
@Proxy(lazy = false)
public class Usuario implements java.io.Serializable {

	private Long usuaId;
	private TipoUsuario tipoUsuario;
	private String usuaNome;
	private String usuaEmail;
	private String usuaSenha;
	private Set<PecaAvaliacao> pecaAvaliacaos = new HashSet<PecaAvaliacao>(0);
	private Set<UsuarioAvaliacao> usuarioAvaliacaos = new HashSet<UsuarioAvaliacao>(0);
	private Set<Pedido> pedidos = new HashSet<Pedido>(0);
	private Set<Wishlist> wishlists = new HashSet<Wishlist>(0);


	public Usuario() {
	}

	public Usuario(Long usuaId, TipoUsuario tipoUsuario) {
		this.usuaId = usuaId;
		this.tipoUsuario = tipoUsuario;
	}

	public Usuario(Long usuaId, TipoUsuario tipoUsuario, String usuaNome, String usuaEmail, String usuaSenha,
			Set<PecaAvaliacao> pecaAvaliacaos, Set<UsuarioAvaliacao> usuarioAvaliacaos, Set<Pedido> pedidos, Set<Wishlist> wishlists) {
		this.usuaId = usuaId;
		this.tipoUsuario = tipoUsuario;
		this.usuaNome = usuaNome;
		this.usuaEmail = usuaEmail;
		this.usuaSenha = usuaSenha;
		this.pecaAvaliacaos = pecaAvaliacaos;
		this.usuarioAvaliacaos = usuarioAvaliacaos;
		this.pedidos = pedidos;
		this.wishlists = wishlists;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "usua_id", unique = true, nullable = false)
	public Long getUsuaId() {
		return this.usuaId;
	}

	public void setUsuaId(Long usuaId) {
		this.usuaId = usuaId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "tius_id", nullable = false)
	public TipoUsuario getTipoUsuario() {
		return this.tipoUsuario;
	}

	public void setTipoUsuario(TipoUsuario tipoUsuario) {
		this.tipoUsuario = tipoUsuario;
	}

	@Column(name = "usua_nome", length = 100)
	public String getUsuaNome() {
		return this.usuaNome;
	}

	public void setUsuaNome(String usuaNome) {
		this.usuaNome = usuaNome;
	}

	@Column(name = "usua_email", length = 100)
	public String getUsuaEmail() {
		return this.usuaEmail;
	}

	public void setUsuaEmail(String usuaEmail) {
		this.usuaEmail = usuaEmail;
	}

	@Column(name = "usua_senha", length = 100)
	public String getUsuaSenha() {
		return this.usuaSenha;
	}

	public void setUsuaSenha(String usuaSenha) {
		this.usuaSenha = usuaSenha;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "usuario")
	public Set<PecaAvaliacao> getPecaAvaliacaos() {
		return this.pecaAvaliacaos;
	}

	public void setPecaAvaliacaos(Set<PecaAvaliacao> pecaAvaliacaos) {
		this.pecaAvaliacaos = pecaAvaliacaos;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "usuario")
	public Set<UsuarioAvaliacao> getUsuarioAvaliacaos() {
		return this.usuarioAvaliacaos;
	}

	public void setUsuarioAvaliacaos(Set<UsuarioAvaliacao> usuarioAvaliacaos) {
		this.usuarioAvaliacaos = usuarioAvaliacaos;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "usuario")
	public Set<Pedido> getPedidos() {
		return this.pedidos;
	}

	public void setPedidos(Set<Pedido> pedidos) {
		this.pedidos = pedidos;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "usuario")
	public Set<Wishlist> getWishlists() {
		return this.wishlists;
	}

	public void setWishlists(Set<Wishlist> wishlists) {
		this.wishlists = wishlists;
	}

}
